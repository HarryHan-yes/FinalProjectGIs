<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Lindy_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerSpeed = 2.5; //Movement variable
isTalking = false; //Whether player is currently chatting
send_mail = false
go_to_forest = false;
go_to_end = false
image_speed = 0.05
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sets isTalking
isTalking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision Detection
//Checks if she's colliding with a robot around her and not alrady talking
if(collision_circle(x, y, 64, obj_npc, true, true) &amp;&amp; !isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 64, obj_npc, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        isTalking = true;
        //Default values of index1, index2
        index1 = 0;
        index2 = 0;
        //Call the script
        scr_dialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Conversation check
if(isTalking) {
    if (global.task1 == true and messageGiver.object_index == obj_Emilia and index1 != 00) {
        global.task1 = noone
        send_mail = true
    }
}

if (send_mail and !isTalking) {
    show_message("Your task: Send mail to Sam")
    global.task1 = true
    room_goto(r_emi_room)
}

if(isTalking) {
    if (global.task1 == true and messageGiver.object_index == obj_Emi and index1 != 00) {
        global.task1 = noone
        go_to_forest = true
    }
}

if (go_to_forest and !isTalking) {
    show_message("Your task: Find Sam")
    global.task1 = noone
    room_goto(r_forest_1)
}

if(isTalking) {
    if (global.task2 == true and messageGiver.object_index == obj_Cicilia and index1 != 00) {
        global.task2 = noone
        go_to_end = true
    }
}

if (go_to_end and !isTalking) {
    global.task2 = noone
    room_goto(r_end)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement &amp; Animation
if(!isTalking) {
    if(keyboard_check(ord("D")) &amp;&amp; place_free(x + playerSpeed, y)) //Checks to see if the player is pressing down on D, if they are, do the actions inside
    {
        x += playerSpeed; //Move the player right by a certain amount of pixels per step, emulating movement
        image_speed = playerSpeed / (room_speed/2.5); //Keep the animation of the player walking smooth and even
        image_xscale = -1 
        image_index = spr_Lindy_walk
    }
    if(keyboard_check(ord("W")) &amp;&amp; place_free(x, y - playerSpeed))
    {
        y -= playerSpeed;
        image_speed = playerSpeed / (room_speed/2.5);
        image_index = spr_Lindy_walk
    }
    if(keyboard_check(ord("A")) &amp;&amp; place_free(x - playerSpeed, y))
    {
        x -= playerSpeed;
        image_speed = playerSpeed / (room_speed/2.5);
        image_xscale = 1
        image_index = spr_Lindy_walk
    }
    if(keyboard_check(ord("S")) &amp;&amp; place_free(x, y + playerSpeed))
    {
        y += playerSpeed;
        image_speed = playerSpeed / (room_speed/2.5);
        image_index = spr_Lindy_walk
    }
    //Check to see when the player isn't pressing down one of these keys, and make it so the character stands still
    if(keyboard_check_released(ord("D")) || keyboard_check_released(ord("W")) || keyboard_check_released(ord("A")) || keyboard_check_released(ord("S")))
    {
        image_index = spr_Lindy_idle
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_back_forest_1">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>r_forest_1_end</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_forest_2">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>r_forest_2</room>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.task2 = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
