<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Lindy_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum LindyStates {
    idle,
    walk
}

state = LindyStates.idle

spd = 1
grav = 1;
moveX = 0;
moveY = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (state) {
    case (LindyStates.idle):
        scr_lindy_idle()
        break
    case (LindyStates.walk):
        scr_lindy_walk()
        break
}

//PHYSICS
if (moveY &lt; 10)
{
    moveY = min(moveY + grav, 9);
}

//COLLISION CHECK
if (place_meeting(x, y + moveY, obj_block))
{
        while (not place_meeting(x, y + sign(moveY), obj_block))
        {
            y += sign(moveY);                  
        }   
    moveY = 0;
}

if (place_meeting(x + moveX, y - 2, obj_block))
{
        while (not place_meeting(x + sign(moveX), y - 2, obj_block))
        {
            x += sign(moveX);
        }
                
    moveX = 0;
}

// Apply Movement
x += moveX;
y += moveY;

// Sprite controller
if (pressD + pressA != 0) {
    image_xscale = sign(pressD - pressA);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0,5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0,100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0,100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0,100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0,200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
